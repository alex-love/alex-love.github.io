{"version":3,"sources":["webpack:////Users/alex/dev/learning-projects/gatsbyjs/alex-love.github.io/content/assets/finance-calc.png","webpack:////Users/alex/dev/learning-projects/gatsbyjs/alex-love.github.io/content/assets/surv-sol.png","webpack:///./node_modules/gatsby-plugin-anchor-links/components/AnchorLink.js","webpack:///./node_modules/gatsby-plugin-anchor-links/types.js","webpack:///./src/components/DateRange.js","webpack:///./src/components/jobs.js","webpack:///./src/components/projectCard.js","webpack:///./src/components/projectDisplay.js","webpack:///./src/pages/index.js","webpack:///./node_modules/gatsby-plugin-anchor-links/index.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js"],"names":["module","exports","Object","defineProperty","value","AnchorLink","obj","_react","require","__esModule","_gatsby","_utils","_types","_ref","to","title","children","className","_ref$stripHash","stripHash","linkProps","stripHashedLocation","onClick","e","handleStrippedLinkClick","handleLinkClick","createElement","Link","Boolean","propTypes","anchorLinkTypes","_propTypes","string","isRequired","bool","node","DateRange","props","startDate","endDate","isCurrentJob","style","marginBottom","rhythm","Date","getFullYear","JobFilter","render","this","change","jobNum","options","marginRight","marginTop","onChange","React","Component","Skills","handleChange","setState","skills","target","state","componentDidMount","marginLeft","display","map","skill","key","name","keywords","keyword","Job","event","i","num","push","work","slice","job","company","position","highlights","highlight","index","Jobs","query","jobQuery","data","dataJson","keys","length","ProjectCard","picture","description","link","useEffect","console","log","maxHeight","maxWidth","paddingTop","src","alt","textAlign","ProjectDisplay","useState","projects","project","discription","imgSrc","id","BlogIndex","showJobs","toggleJobs","bind","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","location","flexBasis","frontmatter","fields","slug","boxShadow","date","dangerouslySetInnerHTML","__html","excerpt","pageQuery","enumerable","get","_AnchorLink","createHTML","url"],"mappings":"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","file":"component---src-pages-index-js-ee384ec8abf226c09ab2.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/finance-calc-5ad5e98563f954ca17d4578902c2ab40.png\";","module.exports = __webpack_public_path__ + \"static/surv-sol-a20a4a334d51585db32fe5aca8ef4a0d.png\";","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnchorLink = AnchorLink;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _gatsby = require(\"gatsby\");\n\nvar _utils = require(\"../utils\");\n\nvar _types = require(\"../types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction AnchorLink(_ref) {\n  var to = _ref.to,\n      title = _ref.title,\n      children = _ref.children,\n      className = _ref.className,\n      _ref$stripHash = _ref.stripHash,\n      stripHash = _ref$stripHash === void 0 ? false : _ref$stripHash;\n  var linkProps = {\n    to: stripHash ? (0, _utils.stripHashedLocation)(to) : to,\n    onClick: function onClick(e) {\n      return stripHash ? (0, _utils.handleStrippedLinkClick)(to, e) : (0, _utils.handleLinkClick)(to, e);\n    }\n  };\n  /**\n   * Optional props\n   */\n\n  if (title) linkProps.title = title;\n  if (className) linkProps.className = className;\n  return _react[\"default\"].createElement(_gatsby.Link, linkProps, Boolean(children) ? children : title);\n}\n\nAnchorLink.propTypes = _types.anchorLinkTypes;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.anchorLinkTypes = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar anchorLinkTypes = {\n  to: _propTypes[\"default\"].string.isRequired,\n  title: _propTypes[\"default\"].string,\n  className: _propTypes[\"default\"].string,\n  stripHash: _propTypes[\"default\"].bool,\n  children: _propTypes[\"default\"].node\n};\nexports.anchorLinkTypes = anchorLinkTypes;","/**\n * DateRange component that supplies DateRanges for jobs\n */\nimport React from \"react\"\nimport { rhythm } from \"../utils/typography\"\nfunction DateRange(props){\n    const {startDate, endDate, isCurrentJob} = props\n\n    return(\n        <div style={{marginBottom: rhythm(-1.8)}}>\n            {(isCurrentJob ? \n             <h4>{startDate}-{new Date().getFullYear()}</h4> :\n             <h4>{startDate} : {endDate}</h4>\n            )}\n        </div>\n    )\n}\n\n\nexport default DateRange\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\n\n//import custom react components\nimport DateRange from \"./DateRange\"\n\n\n\nclass JobFilter extends React.Component{\n  \n\n  render(){\n    const {change, jobNum, options} = this.props\n    \n    return(\n      <div>\n        <p>How many recent jobs to show?</p>\n        <div \n        style={{\n          marginRight: rhythm(2),\n          marginTop: rhythm(-1)\n        }}>\n          <select onChange={change} value={jobNum}>\n            {options}\n          </select>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Skills extends React.Component {\n  constructor(props){\n    super(props)\n    this.state ={skills: []}\n  }\n\n  componentDidMount(){\n    this.setState({skills: this.props.skills})\n  }\n\n  handleChange = (e) => {\n    this.setState({\n        skills: e.target.value\n    })\n  }\n\n  render(){\n  return (\n  <div style={{marginLeft: rhythm(3), display: \"block\"}}>\n  <h3>Skills</h3>\n    \n        {this.props.skills.map((skill)=>{\n            return (\n              <div key={skill.name} style={{display: \"inline-grid\", marginRight: rhythm(1), marginLeft: rhythm(1)}}>\n              <h5>{skill.name}</h5>\n              <ul>\n              {skill.keywords.map((keyword) => <li key={keyword}>{keyword}</li>)}\n              </ul>\n             </div>\n            )\n          })}\n      \n  </div>\n  )\n}\n}\n\nclass Job extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      jobNum: 2,\n      options: [],\n    }\n  }\n\n  change = (event) => {\n    this.setState({jobNum: (event.target.value)})\n  }\n\n  componentDidMount(){\n\n    let options = []\n    for (let i =0; i < this.props.num; i++){\n      options.push(<option value={i+1}>{i+1}</option>)\n    }\n    this.setState({options: options})\n  }\n\n  render(){\n    const {work} = this.props \n    \n    return (\n     <div>\n       <h3>Experience</h3>\n       <div>\n         <JobFilter change={this.change} jobNum={this.state.jobNum} options={this.state.options} />\n      \n      </div>\n       {work.slice(0,this.state.jobNum).map( (job) => {\n           const {company, position, startDate, endDate, highlights, isCurrentJob} = job;\n           return(\n            <div >\n                <DateRange startDate={startDate} endDate={endDate} isCurrentJob={isCurrentJob} />\n                <h4>{company}</h4>\n                <div style={{marginTop: rhythm(-1)}}>\n                <span ><p><em>{position}</em></p></span>\n                <ul>\n                    {highlights.map((highlight,index)=>{\n                        return <li key={index}>{highlight}</li>\n                    })}\n                </ul>\n                </div>\n            </div>\n           )\n       })}\n     </div>\n    );\n}\n}\n\nclass Jobs extends React.Component {\n\n\n  render(){\n\n  return (\n    <StaticQuery\n      query={jobQuery}\n      render={data => {\n        const { work, skills } = data.dataJson\n        const num = Object.keys(work).length;\n        return (\n          <div\n            style={{\n              display: `inline`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n          <Job work={work} num={num} /> \n          <Skills skills={skills} />\n          </div>\n        )\n      }}\n    />\n  )\n}\n}\n\nconst jobQuery = graphql`\n  query jobQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n\tdataJson{\n        work{\n          currentJob\n          company\n          position\n          highlights\n          startDate\n          endDate\n          highlights\n        }\n        skills{\n          name\n          level\n          keywords\n        }\n      }\n  }\n`\n\nexport default Jobs\n","import React, {useEffect} from \"react\"\nimport { rhythm } from \"../utils/typography\"\nimport { AnchorLink } from \"gatsby-plugin-anchor-links\";\nconst ProjectCard = props => {\n  const { name, description, link, picture, index } = props\n\n  const styles = {}\n  const imgStyles = {\n    maxHeight: \"100%\",\n    maxWidth: \"100%\",\n    paddingTop: 0,\n    display: \"block\",\n    marginBottom: 0,\n  }\n  const contentStyles = {\n    textAlign: \"center\",\n  }\n\n  useEffect(() => {\n    console.log(props)\n    return () => {\n    }\n  },)\n\n  return (\n    <div className=\"project-card\">\n      <AnchorLink to={\"projects#\" + index}>\n        <div style={imgStyles}>\n          <img src={picture} alt=\"\" />\n        </div>\n        <div style={contentStyles}>\n          <h5>{name}</h5>\n        </div>\n      </AnchorLink>\n    </div>\n  )\n}\n\nexport default ProjectCard\n","import React, { useState } from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport ProjectCard from \"./projectCard\"\n\n\nconst Arrow = (props) => {\n  const {direction, clickHandler} = props\n  return (\n    <button onClick={() => clickHandler(direction)} className={'lame arrow arrow-' + direction}>\n    <span >>\n    </span>\n    </button>\n  )\n}\n\nconst ProjectDisplay = () => {\n  const [activeSlide, setActiveSlide] = useState(2)\n  const handleButtonClick = (direction) => {\n    console.log('DIRECTION', direction)\n    let projectCount = data.dataJson.projects.length\n    activeSlide <= 2 ? setActiveSlide(projectCount) : setActiveSlide(activeSlide - 1 )\n    if (direction === 'left') {\n    } else if (direction === 'right') {\n      activeSlide >= projectCount - 1 ? setActiveSlide(0) : setActiveSlide(activeSlide + 1 )\n    }\n  }\n  const data = useStaticQuery(graphql`\n    {\n      dataJson(projects: {elemMatch: {}}) {\n        id\n        projects {\n          description\n          link\n          title\n          tech\n          imgSrc\n          id\n        }\n      }\n    }\n  `)\n  \n\n\n  // return <pre>{JSON.stringify(data, null, 4)}</pre>\n  return (\n    <div className=\"project-display-wrap\">\n      {data.dataJson.projects.map((project) => {\n        return (\n        <ProjectCard\n          name={project.title}\n          description={project.discription}\n          link={project.link}\n          picture={project.imgSrc}\n          index={project.id}\n          key={project.id}\n        />\n        )\n      })}\n    </div>\n  )\n  \n}\n\nexport default ProjectDisplay","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Jobs from \"../components/jobs\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport \"../components/utility.css\"\nimport ProjectCard from \"../components/projectCard\"\n\nimport financePhoto from \"/Users/alex/dev/learning-projects/gatsbyjs/alex-love.github.io/content/assets/finance-calc.png\"\nimport survPhoto from \"/Users/alex/dev/learning-projects/gatsbyjs/alex-love.github.io/content/assets/surv-sol.png\"\nimport ProjectDisplay from \"../components/projectDisplay\"\n\nclass BlogIndex extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showJobs: false,\n      className: \"hide\",\n    }\n    this.toggleJobs = this.toggleJobs.bind(this)\n  }\n\n  toggleJobs() {\n    //hacky way to do what I want.. change this later\n    if (this.state.className === \"show\") {\n      this.setState({ className: \"hide\", showJobs: false })\n    } else {\n      this.setState({ className: \"show\", showJobs: true })\n    }\n  }\n\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const { showJobs, className } = this.state\n\n    //move these to my json file\n    const financeDescription =\n      \"Work in progress but I'm currently working on the backend. Test calculator/graph is up as a test for  \"\n\n    const surv =\n      \"This was a website that I made for a client using html/css/js and Bootstrap. The goal was to quickly create a responsive website that resembled a previous website made using godaddy pagebuilder.\"\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`, \"resume\"]}\n        />\n\n        <div style={{ flexBasis: \"2\" }}>\n          <h3>Projects and Work</h3>\n        </div>\n        <ProjectDisplay />\n        {/* <Bio />  add this data to a json file at some point and then just map it*/}\n        <button className=\"button\" onClick={this.toggleJobs}>\n          {showJobs ? \"Hide Resume\" : \"View Resume\"}\n        </button>\n        {/* Conditionally Render Jobs and update className for fade in animation */}\n        <div className={className}>{showJobs && <Jobs />}</div>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            published\n          }\n        }\n      }\n    }\n  }\n`\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"AnchorLink\", {\n  enumerable: true,\n  get: function get() {\n    return _AnchorLink.AnchorLink;\n  }\n});\n\nvar _AnchorLink = require(\"./components/AnchorLink\");","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}