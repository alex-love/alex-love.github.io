{"data":{"site":{"siteMetadata":{"title":"Alex Love's Personal Website","author":"Alex Love"}},"markdownRemark":{"id":"d57c397b-9266-5680-bb61-e8b938f05743","excerpt":"Why Gatsby The idea of static site generators have been of interest to me for a while. After working with/in Wordpress for a while, I really wanted to get as…","html":"<h3>Why Gatsby</h3>\n<p>The idea of static site generators have been of interest to me for a while. After working with/in Wordpress for a while, I really wanted to get as far away from it as I could. Nothing against Wordpress, it has a time and a place, I just needed a break. I chose Gatsby because it allowed me to continue working with React, with additional technologies such as Graphql. It’s also nice to get the performance and security benefit that comes from using a static site generator.</p>\n<h4>Process</h4>\n<p>I started this website from a popular blog starter theme. The main changes I made were adding my resume and project section.</p>\n<h4>JSON Resume</h4>\n<p>I thought it would be cool to have my resume data easily editable and queryable. To do this, I decided to store my resume data is a JSON file. Through the power of Gatsby, Graphql, and a JSON plugin, I could easily query and manipulate my resume data.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">dataJson{\n        work{\n          currentJob\n          company\n          position\n          highlights\n          startDate\n          endDate\n          highlights\n        }\n        skills{\n          name\n          level\n          keywords\n        }\n      }\n  }</code></pre></div>\n<p>The same was true for my skills section, and with this query I could simply map out my keywords. This would make adding anything in the future easier, and I could change the formatting easily without worrying about the content.</p>\n<p>I found this all to be particularly useful and it was also a great learning exercise.</p>\n<h4>Hosting with Github Pages</h4>\n<p>Publishing to Github Pages was pretty simple. My only logistical problem was how I should separate my build from my development repository. My workflow for this was probably not the most ideal but I would mirror my dev repo to my build repo, run my build, and then push to Github pages with the npm gh-pages library. This process pretty simple. My only problem was when I would have React apps on github pages when they in their own repo. For example my finance app at alex-love.github.io/finance-app</p>\n<p>Initially I ran into some trouble with my client-side routing, as my application was behaving as if it was at the root directory.</p>\n<p>This fix for this was pretty simple, I just had to add</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;homepage&quot;: &quot;https://alex-love.github.io/finance-app&quot;,</code></pre></div>\n<p>in my package.json as well as</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;BrowserRouter basename={process.env.PUBLIC_URL}&gt;</code></pre></div>\n<p>in my BrowserRouter. This basename allows my app to be served off the project sub-directory.</p>","frontmatter":{"title":"This Website and Hosting with Github pages","date":"May 10, 2019","description":null}}},"pageContext":{"slug":"/this-website/","previous":{"fields":{"slug":"/reflections-on-the-process/"},"frontmatter":{"title":"Reflections on my learning process: Programming and Computer Science","published":true}},"next":null}}