{"componentChunkName":"component---src-templates-blog-post-js","path":"/my-plans/","webpackCompilationHash":"60bf0efa8f27f004840a","result":{"data":{"site":{"siteMetadata":{"title":"Alex Love's Personal Website","author":"Alex Love"}},"markdownRemark":{"id":"c57c02ba-f410-5f41-933c-ef76a9d500a2","excerpt":"Overall GoalI want this website to be a place where I can reflect on my projects, but also host my projects. My idea is that some of the stuff I want to learn…","html":"<h1>Overall Goal</h1>\n<p>I want this website to be a place where I can reflect on my projects, but also host my projects. My idea is that some of the stuff I want to learn will be cooked into this website/blog itself. For example, I want to create a few microservices that I can use to build my site (in terms of continous deployment).</p>\n<h3>I should be using continous deployment</h3>\n<p>I’ll be honest and say that I’m not 100% certain what this means. I know that the idea behind websites like this, being 100% stored in a single repository is that I have a <code class=\"language-text\">single source of truth</code> in terms of the contents of this website. Anytime a change is made in my repository, that means that my site needs to be rebuilt and redeployed. This means that somewhere, a server needs to be listening/have a webhook to my git repo. When a change is detected, or more realistically, when the webhook fires off a request (I think that’s how it works), then my server knows to run some automated tests, and if those tests pass, to build it and redeploy it.</p>\n<h4>This is not how I do it</h4>\n<p>Currently, when I make a change to my website I use an easily automatable workflow. I make the changes on my development server, then I run a build command and use a gh-pages npm command to push my changes to my repository. This is mostly for adding blogposts, as I haven’t really added much functionality lately (more on that later).</p>\n<h4>More about blog posts</h4>\n<p>At some point I’d like to set up my own headless cms for Gatsby. I’ll probably use Wordpress, not because I like it but because clients understand how to use it.</p>\n<h5>How I currently do blog posts</h5>\n<p>Originally I would create a ‘draft’ by having my published variable be set to false. I just assumed this would work, but found that when I ran the build and deployed it, my draft posts would still be public. I obviously didn’t want this so I started storing my blog posts in another repository and then just moving them over to my main repo and rebuilding as necessary.</p>\n<p>This is obviously not the most efficient workflow, so I’d like to improve it. Services like Netflify are great for this, but I want to learn how to do it myself. It’s fine for something that I need to get working immediately, but what if it breaks? I have no idea how it works and I’m completely dependent on a third-party service for something that I already know how to do, although not the most efficiently.</p>\n<h2>Back to the Goal</h2>\n<p>Ultimately the goal is learning, understanding, reflecting, and possibly teaching. While using something like Gatsby is nice, I understand that I really should understand some core inner workings a little better. Using frameworks like react is nice, but I’m always working to become better acquainted with the core technologies. I mostly use Gatsby as a way to maintain a blog that I know should work. I also use it to keep learning/using react and other current technologies, although I don’t use them outside of this very often.</p>\n<p>For my personal stack those are:</p>\n<ul>\n<li>Frontend: javascript, html, css</li>\n<li>Backend: python, javascript(Node)</li>\n</ul>\n<h3>Some projects I’m working on/plan on working on</h3>\n<ul>\n<li>\n<p>python microservices (image processing, speech processing, basic data stuff etc… fun stuff)</p>\n<ul>\n<li>apis to expose this functionality for my frontend</li>\n<li>Reverse proxy in nginx for some of my other backend stuff</li>\n</ul>\n</li>\n<li>\n<p>Design process</p>\n<ul>\n<li>I’m trying to get better at design/planning before doing a project</li>\n<li>While I can throw stuff together, it ends up taking more time</li>\n<li>This also allows me to write more custom frontend code and not default to bootstrapy stuff as much (not dependent on those, just saves time)</li>\n<li>This also makes for better posts/reflection, as I will have an original design to compare to my final product</li>\n</ul>\n</li>\n<li>\n<p>data science</p>\n<ul>\n<li>I’m slowly been working to improve my data skills in python</li>\n<li>This includes the usual… numpy, pandas, scikit-learn, matplotlib</li>\n</ul>\n</li>\n</ul>\n<h3>Current changes to this site</h3>\n<p>I know this post has been random and incoherrent. That’s okay though, this is mostly just a reference for myself. I don’t really think many, if any are reading this. That being said, here’s what I’m currently working on for my site:</p>\n<ol>\n<li>\n<p>Portfolio Element Redesign</p>\n<ul>\n<li>Have max description length</li>\n<li>Create picture/logo snippet of project</li>\n<li>Implement card style design with css modules</li>\n</ul>\n</li>\n<li>\n<p>Deviation From This Theme Starter</p>\n<ul>\n<li>This blog comes from a starter theme… I’m going to make it more unique.</li>\n<li>Goal is that I mostly just used the blog functionality as a starting point and it looks less like the starter</li>\n</ul>\n</li>\n<li>I’d like to add to create a custom cms so I can edit my markdown blog posts and any other data I use (json resume etc…).</li>\n</ol>","frontmatter":{"title":"How I intend to use my website","date":"June 24, 2019","description":"Sometimes I find myself distracting in my projects, constantly bouncing around and not always sticking to one thing."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/my-plans/","previous":{"fields":{"slug":"/this-website/"},"frontmatter":{"title":"This Website and Hosting with Github pages","published":true}},"next":null}}}